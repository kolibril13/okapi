{
  "example1640119110822555000.png": "arrray = scipy.ndimage.generate_binary_structure(3, 1)\nplot_voxels(arrray)\n",
  "example1640119111961516000.png": "arrray = scipy.ndimage.generate_binary_structure(3, 2)\nplot_voxels(arrray)\n",
  "example1640119112565825000.png": "arrray = scipy.ndimage.generate_binary_structure(3, 3)\nplot_voxels(arrray)\n",
  "example1640119113186909000.png": "arrray = cube(5)\nplot_voxels(arrray)\n",
  "example1640119113729312000.png": "arrray = octahedron(3)\nplot_voxels(arrray)\n",
  "example1640119114539892000.png": "arrray = ball(3)\nplot_voxels(arrray)\n",
  "example1640119115807356000.png": "import matplotlib.pyplot as plt\nimport numpy as np\nfrom scipy.ndimage import gaussian_filter\n\ngrids = 2\nboxs = 5\n\nvoxelarray = np.zeros((boxs * grids, boxs * grids, boxs * grids))\n\ni = 1\nfor xi in range(0, 2):\n    for yi in range(0, 2):\n        for zi in range(0, 2):\n            voxelarray[\n                xi * boxs: xi * boxs + boxs,\n                yi * boxs: yi * boxs + boxs,\n                zi * boxs: zi * boxs + boxs,\n            ] = i\n            i += 1\n\nvoxelarray = np.uint8(voxelarray*255/i)\n\nplot_voxels(voxelarray)\n",
  "example1640121441936382000.png": "\nvoxelarray = data.binary_blobs(length=110, volume_fraction=0.1, n_dim=3, seed=9)\nvoxelarray= voxelarray[90:,90:,90:]\n#plt.imshow(voxelarray[:,:,3])\nplot_voxels(voxelarray, linewidth=0.1)\n"
}